[{"C:\\Users\\Dj582\\Documents\\Webprojects\\Complete\\calculator\\src\\index.js":"1","C:\\Users\\Dj582\\Documents\\Webprojects\\Complete\\calculator\\src\\reportWebVitals.js":"2","C:\\Users\\Dj582\\Documents\\Webprojects\\Complete\\calculator\\src\\Components\\Calculator.js":"3","C:\\Users\\Dj582\\Documents\\Webprojects\\Complete\\calculator\\src\\Components\\Display.js":"4","C:\\Users\\Dj582\\Documents\\Webprojects\\Complete\\calculator\\src\\Components\\Keypad.js":"5"},{"size":534,"mtime":1612150075293,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":2350,"mtime":1612149814989,"results":"9","hashOfConfig":"7"},{"size":243,"mtime":1612149722475,"results":"10","hashOfConfig":"7"},{"size":1695,"mtime":1612151695012,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1s9rszd",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Dj582\\Documents\\Webprojects\\Complete\\calculator\\src\\index.js",[],"C:\\Users\\Dj582\\Documents\\Webprojects\\Complete\\calculator\\src\\reportWebVitals.js",[],"C:\\Users\\Dj582\\Documents\\Webprojects\\Complete\\calculator\\src\\Components\\Calculator.js",["24"],"import React from 'react';\r\nimport Display from './Display.js';\r\nimport Keypad from './Keypad.js';\r\nimport '../Style/Calculator.scss';\r\n\r\nconst OPERATORS = new Set(\"+-*/\");\r\n\r\nclass Calculator extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: \"0\"\r\n    }\r\n    this.keypadPressed = this.keypadPressed.bind(this);\r\n    this.calculateResult = this.calculateResult.bind(this);\r\n    this.clear = this.clear.bind(this);\r\n  }\r\n\r\n  keypadPressed(value) {\r\n    // Location of the previous character.\r\n    let location = this.state.value.length-1;\r\n\r\n    // Removes previous operator when consecutive operators are entered.\r\n    if (OPERATORS.has(value) && value !== \"-\") {\r\n      for (let i=location; i>=0; i-- ){\r\n        if (OPERATORS.has(this.state.value[i])){\r\n          this.setState(state => ({value: state.value.slice(0, i)}));\r\n        }\r\n        else if (!OPERATORS.has(this.state.value[i])) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Removes consecutive zeros after an operator.\r\n    if (\"0\" === value) {\r\n      if (\"0\" === this.state.value[location]) {\r\n        if (OPERATORS.has(this.state.value[location-1])) {\r\n          this.setState(state => ({value: state.value.slice(0, location)}));\r\n        }\r\n      }\r\n    }\r\n\r\n    // Removes consecutive decimal point.\r\n    if (\".\" === value) {\r\n      for (let i=location; i>=0; i-- ){\r\n        if (\".\" === this.state.value[i]) {\r\n          value = \"\";\r\n        }\r\n        else if (OPERATORS.has(this.state.value[i])) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Removes the first zero when something other than . is entered.\r\n    if (\"0\" === this.state.value && \".\" !== value) {\r\n      this.setState({value: value.toString()});\r\n    }\r\n    else {\r\n      this.setState(state => ({value: state.value + value.toString()}));\r\n    }\r\n  }\r\n\r\n  calculateResult() {\r\n    this.setState(state => ({value: eval(state.value).toString()}));\r\n  }\r\n\r\n  clear() {\r\n    this.setState({value: \"0\"});\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div id=\"background\">\r\n        <div id=\"calculator\">\r\n          <Display value={this.state.value} />\r\n          <Keypad onNumPress={this.keypadPressed} \r\n          onEqualPress={this.calculateResult} onClear={this.clear}/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calculator;\r\n",["25","26"],"C:\\Users\\Dj582\\Documents\\Webprojects\\Complete\\calculator\\src\\Components\\Display.js",[],"C:\\Users\\Dj582\\Documents\\Webprojects\\Complete\\calculator\\src\\Components\\Keypad.js",[],{"ruleId":"27","severity":1,"message":"28","line":67,"column":37,"nodeType":"29","messageId":"30","endLine":67,"endColumn":41},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},"no-eval","eval can be harmful.","CallExpression","unexpected","no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-global-assign","no-unsafe-negation"]